{"version":3,"sources":["../src/explore.js"],"names":["path","recursive","onlyDirectory","pathList","fn","files","readdirSync","err","console","log","forEach","curFilePath","file","stat","statSync","isDirectory","push"],"mappings":";;;;;;kBAae,YAGP;AAAA,MAHgBA,IAGhB,uEAHuB,EAGvB;;AAAA,iFAAJ,EAAI;AAAA,4BAFNC,SAEM;AAAA,MAFNA,SAEM,kCAFM,IAEN;AAAA,gCADNC,aACM;AAAA,MADNA,aACM,sCADU,KACV;;AACN,MAAI,CAACF,IAAL,EAAW;AACT;AACD;;AAED,MAAMG,WAAW,EAAjB;AACA,MAAIC,YAAJ;AACA,GAACA,MAAK,kBAAQ;AACZ,QAAIC,cAAJ;AACA,QAAI;AACFA,cAAQ,aAAGC,WAAH,CAAeN,IAAf,CAAR;AACD,KAFD,CAEE,OAAOO,GAAP,EAAY;AACZC,cAAQC,GAAR,CAAY,WAAWF,GAAvB;AACA;AACD;AACDF,UAAMK,OAAN,CAAc,gBAAQ;AACpB,UAAMC,cAAiBX,IAAjB,SAAyBY,IAA/B;AACA,UAAMC,OAAO,aAAGC,QAAH,CAAYH,WAAZ,CAAb;;AAEA,UAAIE,KAAKE,WAAL,MAAsBd,SAA1B,EAAqC;AACnCE,iBAASa,IAAT,CAAcL,WAAd;AACAP,YAAGO,WAAH;AACD,OAHD,MAGO,IAAI,CAACT,aAAL,EAAoB;AACzBC,iBAASa,IAAT,CAAcL,WAAd;AACD;AACF,KAVD;AAWD,GAnBD,EAmBGX,IAnBH;;AAqBA,SAAOG,QAAP;AACD,C;;AAzCD;;;;;;AAyCC","file":"explore.js","sourcesContent":["/**\n * @author linjilin\n * @lastmodifiedDate 2016/12/02\n */\nimport fs from 'fs';\n\n/**\n *  遍历文件夹获得所有子文件、子文件夹列表的path\n *  path                [String]  目录\n *  config              [Object]  配置\n *  config.recursive    [Boolean] 是否深层遍历\n *  config.onDirecotry  [Boolean] 是否只输出文件夹列表\n */\nexport default function(path = '', {\n  recursive = true,\n  onlyDirectory = false\n} = {}) {\n  if (!path) {\n    return;\n  }\n\n  const pathList = [];\n  let fn;\n  (fn = path => {\n    let files;\n    try {\n      files = fs.readdirSync(path);\n    } catch (err) {\n      console.log('err:\\n' + err);\n      return;\n    }\n    files.forEach(file => {\n      const curFilePath = `${path}/${file}`;\n      const stat = fs.statSync(curFilePath);\n\n      if (stat.isDirectory() && recursive) {\n        pathList.push(curFilePath);\n        fn(curFilePath);\n      } else if (!onlyDirectory) {\n        pathList.push(curFilePath);\n      }\n    });\n  })(path);\n\n  return pathList;\n};\n"]}