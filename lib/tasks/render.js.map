{"version":3,"sources":["../../src/tasks/render.js"],"names":["watch","require","rename","plumber","nunjucks","chalk","argv","stream","module","exports","cfg","gulp","task","viewsGlob","event","currentView","path","viewRelativeDir","dirname","replace","base","start","dir_views","env","configure","noCache","autoescape","RemoteExtension","tags","parse","parser","nodes","lexer","tok","nextToken","args","parseSignature","advanceAfterBlockEnd","value","body","parseUntilBlocks","errorBody","skipSymbol","skip","TOKEN_BLOCK_END","CallExtension","run","context","url","id","Math","floor","random","ret","runtime","SafeString","request","res","getBody","toString","addExtension","nunjucksRender","obj","newStream","Transform","objectMode","_transform","chunk","encoding","done","render","err","console","log","contents","Buffer","glob","JSON","stringify","green","src","pipe","extname","dest","dir_pages"],"mappings":"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","file":"render.js","sourcesContent":["'use strict';\n/**\n * @author linjilin\n * @lastmodifiedDate 2016/07/15\n */\nvar watch = require('gulp-watch');\nvar rename = require('gulp-rename');\nvar plumber = require('gulp-plumber');\nvar nunjucks = require('nunjucks');\nconst chalk = require('chalk');\nconst argv = require('yargs').argv;\n\nvar stream = require('stream');\n\nmodule.exports = function(cfg, gulp) {\n\n  gulp\n    .task('watch-views', function() {\n      watch(viewsGlob, function(event) {\n        currentView = event.path;\n        viewRelativeDir = (event.dirname + '/').replace(event.base, ''); //输出相对views目录的路径\n        gulp.start('render');\n      });\n    });\n\n  var currentView;\n  var viewRelativeDir = ''; //rename时附加的相对路径\n  var viewsGlob = [`${cfg.dir_views}/**/*.html`, `!${cfg.dir_views}/_layouts/**/*.html`, `!${cfg.dir_views}/_partials/**/*.html`];\n\n  // nunjucks 配置\n  var env = nunjucks.configure({noCache: true, autoescape: false});\n  /**\n   *  TODO: 优化\n   * 'remote' custom tags START\n   */\n  function RemoteExtension() {\n    this.tags = ['remote'];\n    this.parse = function(parser, nodes, lexer) {\n      // get the tag token\n      var tok = parser.nextToken();\n      // parse the args and move after the block end. passing true as the second arg\n      // is required if there are no parentheses\n      var args = parser.parseSignature(null, true);\n      parser.advanceAfterBlockEnd(tok.value);\n      // parse the body and possibly the error block, which is optional\n      var body = parser.parseUntilBlocks('error', 'endremote');\n      var errorBody = null;\n      if (parser.skipSymbol('error')) {\n        parser.skip(lexer.TOKEN_BLOCK_END);\n        errorBody = parser.parseUntilBlocks('endremote');\n      }\n      parser.advanceAfterBlockEnd();\n      // See above for notes about CallExtension\n      return new nodes.CallExtension(this, 'run', args, [body, errorBody]);\n    };\n    this.run = function(context, url, body, errorBody) {\n      var id = 'el' + Math.floor(Math.random() * 10000);\n      var ret = new nunjucks\n        .runtime\n        .SafeString('<div id=\"' + id + '\">' + body() + '</div>');\n      /**/\n      var request = require('sync-request');\n      var res = request('GET', url);\n      return res.getBody().toString('utf-8');\n      /**/\n    };\n  }\n  env.addExtension('RemoteExtension', new RemoteExtension());\n  // END\n\n  function nunjucksRender(obj) {\n    var newStream = new stream.Transform({objectMode: true});\n    newStream._transform = function(chunk, encoding, done) {\n      nunjucks.render(chunk.path, function(err, res) {\n        if (err) {\n          console.log(err);\n          done();\n        } else {\n          chunk.contents = new Buffer(res.replace(/\\r\\n/g, '\\n'));\n          done(null, chunk);\n        }\n      });\n    }\n    return newStream;\n  }\n\n  gulp\n    .task('render', function() {\n      var glob = currentView || viewsGlob;\n      console.log(JSON.stringify(glob).green);\n      gulp\n        .src(glob)\n        .pipe(plumber())\n        .pipe(nunjucksRender())\n        .pipe(rename(function(path) {\n          path.dirname += '/' + viewRelativeDir; // ./path/path/path\n          // path.basename = path.basename + '.hbs';\n          path.extname = '.html';\n        }))\n        .pipe(gulp.dest(cfg.dir_pages));\n    });\n\n};\n"]}